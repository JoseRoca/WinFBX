2
FBGUI
.bas
CWindow: COMMCTRL: Label
' ########################################################################################
' Microsoft Windows
' File: CW_COMMCTRL_Label.fbtpl
' Contents: Demonstrates the use of the Label control.
' Compiler: FreeBasic 32 & 64 bit
' Copyright (c) 2016 José Roca. Freeware. Use at your own risk.
' THIS CODE AND INFORMATION IS PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER
' EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF
' MERCHANTABILITY AND/OR FITNESS FOR A PARTICULAR PURPOSE.
' ########################################################################################

#define UNICODE
#INCLUDE ONCE "Afx/CWindow.inc"
USING Afx

CONST IDC_LABEL = 1001

DECLARE FUNCTION WinMain (BYVAL hInstance AS HINSTANCE, _
                          BYVAL hPrevInstance AS HINSTANCE, _
                          BYVAL szCmdLine AS ZSTRING PTR, _
                          BYVAL nCmdShow AS LONG) AS LONG

   END WinMain(GetModuleHandleW(NULL), NULL, COMMAND(), SW_NORMAL)

' // Forward declaration
DECLARE FUNCTION WndProc (BYVAL hwnd AS HWND, BYVAL uMsg AS UINT, BYVAL wParam AS WPARAM, BYVAL lParam AS LPARAM) AS LRESULT

' ========================================================================================
' Main
' ========================================================================================
FUNCTION WinMain (BYVAL hInstance AS HINSTANCE, _
                  BYVAL hPrevInstance AS HINSTANCE, _
                  BYVAL szCmdLine AS ZSTRING PTR, _
                  BYVAL nCmdShow AS LONG) AS LONG

   ' // Set process DPI aware
   AfxSetProcessDPIAware

   ' // Create the main window
   DIM pWindow AS CWindow
   pWindow.Create(NULL, "CWindow with a label control", @WndProc)
   pWindow.Center

   ' // Add a label control
   DIM hLabel AS HWND = pWindow.AddControl("Label", , IDC_LABEL, "This is a label", 100, 50, 150, 23)

   ' // Create a custom brush for the label
   DIM tlb AS LOGBRUSH
   tlb.lbStyle = BS_SOLID
   tlb.lbColor = &h00ED9564
   DIM hBrush AS HBRUSH = CreateBrushIndirect(@tlb)
   SetPropw hLabel, "BRUSH", hBrush

   |

   ' // Dispatch Windows messages
   FUNCTION = pWindow.DoEvents(nCmdShow)

END FUNCTION
' ========================================================================================

' ========================================================================================
' Main window callback procedure
' ========================================================================================
FUNCTION WndProc (BYVAL hwnd AS HWND, BYVAL uMsg AS UINT, BYVAL wParam AS WPARAM, BYVAL lParam AS LPARAM) AS LRESULT

   SELECT CASE uMsg

      CASE WM_COMMAND
         SELECT CASE GET_WM_COMMAND_ID(wParam, lParam)
            ' // If ESC key pressed, close the application sending an WM_CLOSE message
            CASE IDCANCEL
               IF GET_WM_COMMAND_CMD(wParam, lParam) = BN_CLICKED THEN
                  SendMessageW hwnd, WM_CLOSE, 0, 0
                  EXIT FUNCTION
               END IF
         END SELECT

      CASE WM_CTLCOLORSTATIC
         IF GetDlgCtrlID(CAST(HWND, lParam)) = IDC_LABEL THEN
            ' // Set the background and text colors
            SetBkColor CAST(HDC, wParam), &h00ED9564
            SetTextColor CAST(HDC, wParam), &h00FFFFFF
            ' // Return handle of brush used to paint background
            FUNCTION = CAST(LRESULT, GetPropW(CAST(HWND, lParam), "BRUSH"))
            EXIT FUNCTION
         END IF

    	CASE WM_DESTROY
         ' // Destroy custom brush
         DeleteObject CAST(HGDIOBJ, RemovePropW(GetDlgItem(hwnd, IDC_LABEL), "BRUSH"))
         ' // End the application
         PostQuitMessage(0)
         EXIT FUNCTION

   END SELECT

   ' // Default processing of Windows messages
   FUNCTION = DefWindowProcW(hWnd, uMsg, wParam, lParam)

END FUNCTION
' ========================================================================================
