2
FBGUI
.bas
CWindow: COMMCTRL: Group Box
' ########################################################################################
' Microsoft Windows
' File: CW_COMMCTRL_GroupBox.fbtpl
' Contents: Demonstrates the use of the GroupBox control.
' Comments: Drawn around several controls to indicate a visual association between them.
' Often used around related radio buttons.
' Remarks: In PowerBASIC it is mistakenly called "Frame" instead of "Group Box".
' Compiler: FreeBasic 32 & 64 bit
' Copyright (c) 2016 José Roca. Freeware. Use at your own risk.
' THIS CODE AND INFORMATION IS PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER
' EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF
' MERCHANTABILITY AND/OR FITNESS FOR A PARTICULAR PURPOSE.
' ########################################################################################

#define UNICODE
#INCLUDE ONCE "Afx/CWindow.inc"
USING Afx

ENUM
   IDC_GROUPBOX = 1001
   IDC_LABEL
   IDC_CHECK3STATE
   IDC_EDIT
   IDC_BUTTON
END ENUM

DECLARE FUNCTION WinMain (BYVAL hInstance AS HINSTANCE, _
                          BYVAL hPrevInstance AS HINSTANCE, _
                          BYVAL szCmdLine AS ZSTRING PTR, _
                          BYVAL nCmdShow AS LONG) AS LONG

   END WinMain(GetModuleHandleW(NULL), NULL, COMMAND(), SW_NORMAL)

' // Forward declaration
DECLARE FUNCTION WndProc (BYVAL hwnd AS HWND, BYVAL uMsg AS UINT, BYVAL wParam AS WPARAM, BYVAL lParam AS LPARAM) AS LRESULT

' ========================================================================================
' Main
' ========================================================================================
FUNCTION WinMain (BYVAL hInstance AS HINSTANCE, _
                  BYVAL hPrevInstance AS HINSTANCE, _
                  BYVAL szCmdLine AS ZSTRING PTR, _
                  BYVAL nCmdShow AS LONG) AS LONG

   ' // Set process DPI aware
   AfxSetProcessDPIAware

   ' // Create the main window
   DIM pWindow AS CWindow
   pWindow.Brush = GetStockObject(WHITE_BRUSH)
   pWindow.Create(NULL, "GroupBox example", @WndProc)
   ' // Sizes it by setting the wanted width and height of its client area
   pWindow.SetClientSize(500, 320)
   ' // Centers the window
   pWindow.Center

   ' // Add the controls
   pWindow.AddControl("GroupBox", , IDC_GROUPBOX, "GroupBox", 20, 20, 305, 100)
   pWindow.AddControl("Label", , IDC_LABEL, "Label", 60, 50, 75, 23)
   pWindow.AddControl("Check3State", , IDC_CHECK3STATE, "Click me", 60, 80, 75, 23)
   pWindow.AddControl("Edit", , IDC_EDIT, "", 210, 50, 75, 23)
   pWindow.AddControl("Button", , IDC_BUTTON, "&Close", 210, 80, 75, 23)

   |

   ' // Dispatch Windows messages
   FUNCTION = pWindow.DoEvents(nCmdShow)

END FUNCTION
' ========================================================================================

' ========================================================================================
' Main window callback procedure
' ========================================================================================
FUNCTION WndProc (BYVAL hwnd AS HWND, BYVAL uMsg AS UINT, BYVAL wParam AS WPARAM, BYVAL lParam AS LPARAM) AS LRESULT

   SELECT CASE uMsg

      CASE WM_COMMAND
         SELECT CASE GET_WM_COMMAND_ID(wParam, lParam)
            ' // If ESC key pressed, close the application sending an WM_CLOSE message
            CASE IDCANCEL
               IF GET_WM_COMMAND_CMD(wParam, lParam) = BN_CLICKED THEN
                  SendMessageW hwnd, WM_CLOSE, 0, 0
                  EXIT FUNCTION
               END IF
            ' // If Close button pressed, close the application sending an WM_CLOSE message
            CASE IDC_BUTTON
               IF GET_WM_COMMAND_CMD(wParam, lParam) = BN_CLICKED THEN
                  SendMessageW hwnd, WM_CLOSE, 0, 0
                  EXIT FUNCTION
               END IF
         END SELECT

      CASE WM_CTLCOLORSTATIC
         ' // Draw the GroupBox using the main window background color
         IF GetWindowID(cast(HWND, lParam)) = IDC_GROUPBOX THEN
            ' Return handle of brush used to paint background
            FUNCTION = CAST(LRESULT, GetClassLongPtr(GetParent(hwnd), GCLP_HBRBACKGROUND))
            EXIT FUNCTION
         END IF

    	CASE WM_DESTROY
         ' // End the application
         PostQuitMessage(0)
         EXIT FUNCTION

   END SELECT

   ' // Default processing of Windows messages
   FUNCTION = DefWindowProcW(hWnd, uMsg, wParam, lParam)

END FUNCTION
' ========================================================================================
